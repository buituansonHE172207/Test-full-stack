
# This is the workflow for building and pushing a Docker image to Docker Hub.

name: Docker Build and Push

on:
  workflow_call:
    inputs:
      image-name:
        description: 'The name of the Docker image to build and push'
        required: true
        type: string
        default: tuansondocker1407/test-azure
      registry:
        description: 'The registry to push the Docker image to'
        required: true
        type: string
        default: docker.io
      dockerfile-path:
        description: 'The path to the Dockerfile to build the image from'
        required: true
        type: string
        default: ./Dockerfile
      context:
        description: 'The context to use for the Docker build'
        required: true
        type: string
        default: .
      
    secrets:
      DOCKER_USERNAME:
        description: 'Docker Hub username'
        required: true
      DOCKER_PASSWORD:
        description: 'Docker Hub password'
        required: true

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ inputs.image-name }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile-path }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image-name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
